{"ast":null,"code":"var _jsxFileName = \"/Users/adrienheymans/Documents/GitHub/MindMender/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [transcript, setTranscript] = useState([]);\n  const startSession = () => {\n    console.log(\"Session started\");\n    // Implement your start session logic here\n  };\n  const addMessageToTranscript = (message, isUser = true) => {\n    setTranscript([...transcript, {\n      message,\n      isUser\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: \"Welcome to MindMender.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startSession,\n        children: \"Start your session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transcript\",\n        children: transcript.map((entry, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${entry.isUser ? 'user' : 'assistant'}`,\n          children: entry.message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"TBm+C4TGVz5JI1XrZ8yaxkI9TbQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","transcript","setTranscript","startSession","console","log","addMessageToTranscript","message","isUser","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","entry","index","_c","$RefreshReg$"],"sources":["/Users/adrienheymans/Documents/GitHub/MindMender/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [transcript, setTranscript] = useState([]);\n\n  const startSession = () => {\n    console.log(\"Session started\");\n    // Implement your start session logic here\n  };\n\n  const addMessageToTranscript = (message, isUser = true) => {\n    setTranscript([...transcript, { message, isUser }]);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        Welcome to MindMender.\n      </header>\n      <div className=\"container\">\n        <button onClick={startSession}>Start your session</button>\n        <div className=\"transcript\">\n          {transcript.map((entry, index) => (\n            <div key={index} className={`message ${entry.isUser ? 'user' : 'assistant'}`}>\n              {entry.message}\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMO,YAAY,GAAGA,CAAA,KAAM;IACzBC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAC9B;EACF,CAAC;EAED,MAAMC,sBAAsB,GAAGA,CAACC,OAAO,EAAEC,MAAM,GAAG,IAAI,KAAK;IACzDN,aAAa,CAAC,CAAC,GAAGD,UAAU,EAAE;MAAEM,OAAO;MAAEC;IAAO,CAAC,CAAC,CAAC;EACrD,CAAC;EAED,oBACEV,OAAA;IAAKW,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBZ,OAAA;MAAQW,SAAS,EAAC,YAAY;MAAAC,QAAA,EAAC;IAE/B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACThB,OAAA;MAAKW,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBZ,OAAA;QAAQiB,OAAO,EAAEZ,YAAa;QAAAO,QAAA,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC1DhB,OAAA;QAAKW,SAAS,EAAC,YAAY;QAAAC,QAAA,EACxBT,UAAU,CAACe,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAC3BpB,OAAA;UAAiBW,SAAS,EAAG,WAAUQ,KAAK,CAACT,MAAM,GAAG,MAAM,GAAG,WAAY,EAAE;UAAAE,QAAA,EAC1EO,KAAK,CAACV;QAAO,GADNW,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACd,EAAA,CA7BQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AA+BZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}